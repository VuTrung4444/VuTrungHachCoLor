repeat task.wait() until game:IsLoaded()

--// Variables--Test3 \\--
local plr = game.Players.LocalPlayer
local character = plr.Character
local PlrHumanoidRootPart = character.HumanoidRootPart


--// Tween \\--
local function GetDistance(Endpoint)
    if typeof(Endpoint) == "Instance" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    elseif typeof(Endpoint) == "CFrame" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    end
    local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    return Magnitude
end

function Tween(Endpoint)
    if typeof(Endpoint) == "Instance" then
        Endpoint = Endpoint.CFrame
    end
    local TweenFunc = {}
    local Distance = GetDistance(Endpoint)
    local TweenInfo = TweenInfo.new(Distance / getgenv().tweenspeed, Enum.EasingStyle.Linear)
    local TweenObj = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo, { CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1, 0, 0), math.rad(0)) })
    TweenObj:Play()

    function TweenFunc:Cancel()
        TweenObj:Cancel()
        return false
    end

    if Distance <= 100 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
        TweenObj:Cancel()
        return false
    end

    return TweenFunc
end

local function EnableAntiFall()
    local plr = game.Players.LocalPlayer
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = plr.Character.HumanoidRootPart
    if not humanoidRootPart:FindFirstChild("BodyVelocity") then
        local antifall = Instance.new("BodyVelocity")
        antifall.Velocity = Vector3.new(0, 0, 0)
        antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        antifall.Name = "BodyVelocity"
        antifall.Parent = humanoidRootPart
    end
end

local function DisableAntiFall()
    local plr = game.Players.LocalPlayer
    if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = plr.Character.HumanoidRootPart
        local antifall = humanoidRootPart:FindFirstChild("BodyVelocity")
        if antifall then
            antifall:Destroy()
        end
    end
end

--// Get Closest \\---
function IsEntitySelected(entity, selectedEntities)
    for _, selectedEntity in ipairs(selectedEntities) do
        if entity.Name == selectedEntity then
            return true
        end
    end
    return false
end



function getclosest(selectedEntities, parentFolder)
    local closestEntity = nil
    local closestDistance = math.huge

    local entities = parentFolder:GetDescendants()

    for i, entity in ipairs(entities) do
        if entity:IsA("Model") and IsEntitySelected(entity, selectedEntities) then
            local entityName = entity.Name
            local humanoid = entity:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local entityCFrame = entity:GetModelCFrame()
                local distance = (entityCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEntity = entity
                end
            end
        end
    end

    if closestEntity then
        print("Closest Entity:", closestEntity.Name)
    else
        print("No Closest Entity Found")
    end

    return closestEntity
end

--// Tables \\--
local AllowedBosses = {
    "Snow Trainee",
    "Sound Trainee",
    "Akaza",
    "Douma",
    "Enme",
    "Flame Trainee",
    "Muichiro Tokito",
    "Tengen",
    "Rengoku",
    "Inosuke",
    "Swampy",
    "Shiron",
    "Zanegutsu Kuuchie",
    "Sabito",
    "Sanemi",
    "Nezuko",
    "Giyu",
    "Slasher",
    "Susamaru",
    "Yahaba",
}

local AllowedMobs = {
    "Civilian",
    "Heikin Demon",
    "Slasher",
    "Nomay Bandit",
    "Nomay Bandit Boss",
    "Yowai Demon",
    "Thief",
    "Mizunoto Demon Slayer",
}

local raceTable = {
    [1] = "Human",
    [2] = "Slayer",
    [3] = "Demon",
    [4] = "Hybrid"
}

local SelectedBosses = {}
local Bosses = {}
local mobs = {}
local BossLabelTable = {}

local GodModes = {
    "Water_Surface_Slash",
    "Water_fall_basin",
    "insect_breathing_dance_of_the_centipede",
    "blood_burst_explosive_choke_slam",
    "explosive_demon_art_blood_burst",
    "Wind_breathing_black_wind_mountain_mist",
    "flame_breathing_flaming_eruption",
    "scythe_asteroid_reap",
    "Beast_breathing_devouring_slash",
    "akaza_flashing_williow_skillasd",
    "akaza_bda_compass_needle",
    "dream_bda_flesh_monster",
    "swamp_bda_swamp_domain",
    "snow_breatihng_layers_frost",
    "snow_breathing_illusory_Storm",
    "sound_breathing_smoke_screen",
    "ice_demon_art_bodhisatva",
}


--// Kill Aura \\--
local function attack(method)
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
end

local attackMethods = {
    ["Combat"] = 'fist_combat',
    ["Sword"] = 'Sword_Combat_Slash',
    ["Scythe"] = 'Scythe_Combat_Slash',
    ["Claw"] = 'claw_Combat_Slash',
    ["Fans"] = 'fans_combat_slash',
}


--// Main Script \\--
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Subs = library.subs
local IsOpen = Subs.Wait

local Window = library:CreateWindow({
    Name = "HackerLor Hub | Project Slayers",
    Themeable = {
        Info = "hackerlor",
        Credit = false,
        Background = "",
        Visible = true
    }
})


--// Main Tab \\--
local MainTab = Window:CreateTab({Name = "Main"})
local MainSection = MainTab:CreateSection({Name = "Farming"})
local Settings = MainTab:CreateSection({Name = "Settings"})
local KillAura = MainTab:CreateSection({Name = "Kill Aura", Side = "Right"})
local Info = MainTab:CreateSection({Name = "Info", Side = "Right"})
local BossesTab = MainTab:CreateSection({Name = "Spawned Bosses", Side = "Left"})

--// Misc Tab \\--
local MiscTab = Window:CreateTab({Name = "Misc"})
local MiscSection = MiscTab:CreateSection({Name = "Misc"})


--// Main/Farming Section \\--
local BossDropdown = MainSection:AddDropdown({
    Name = "Boss Selection",
    List = Bosses,
    Flag = "BossSelection",
    Nothing = "Select Boss...",
    Multi = true,
    Callback = function(Chosen)
        SelectedBosses = Chosen 
    end
})

local MobDropdown = MainSection:AddDropdown({
    Name = "Mob Selection",
    List = mobs,
    Flag = "MobSelection",
    Nothing = "Select Mob...",
    Multi = true,
    Callback = function(Chosen)
        selectedMobs = Chosen 
    end
})

MainSection:AddToggle({
    Name = "Farm",
    Flag = "FarmSelectedBosses",
    Callback = function (v)
        getgenv().Farm = v
        if not v then 
            if antifallActive then
                antifallActive = false
                DisableAntiFall()
            end
        end
    end
})

MainSection:AddToggle({
    Name = "Arrow Aura [Near Mobs]",
    Flag = "Arrow",
    Callback = function (v)
        getgenv().Arrow = v
    end
})

MainSection:AddToggle({
    Name = "Snow Aura [Near Mobs]",
    Flag = "Snow",
    Callback = function (v)
        getgenv().Snow = v
    end
})


MainSection:AddTextbox({
    Name = 'Player Target',
    Placeholder = '...',
    Flag = 'Player Name',
    Callback = function(v)
        getgenv().selectedPlayerName = v
    end
})

MainSection:AddToggle({
    Name = "Arrow Aura [Target Player]",
    Flag = "ArrowTargeted",
    Callback = function (v)
        getgenv().TargetPlayersArrow = v
    end
})


MainSection:AddToggle({
    Name = "Arrow Aura [All Players]",
    Flag = "ArrowAll",
    Callback = function (v)
        getgenv().AllArrow = v
    end
})

--// Settings \\--
Settings:AddDropdown({
    Name = "Farm Method",
    List = {"Above","Behind","Below"},
    Flag = "FarmMethodSelection",
    Nothing = "Select Method...",
    Callback = function(Chosen)
        FarmMethod = Chosen 
    end
})

Settings:AddSlider({
    Name = "Distance",
    Flag = "DistanceSlider",
    Value = 10,
    Min = 1,
    Max = 200,
    Textbox = true,
    Callback = function(Value)
        getgenv().Distance = Value
    end
})

Settings:AddSlider({
    Name = "Tween Speed",
    Flag = "TweenSlider",
    Value = 300,
    Min = 150,
    Max = 500,
    Textbox = true,
    Callback = function(Value)
        getgenv().tweenspeed = Value
    end
})

--// Kill Aura \\--
KillAura:AddToggle({
    Name = "Kill Aura",
    Flag = "KillAuraToggle",
    Callback = function (v)
        getgenv().KillAura = v
    end
})


KillAura:AddDropdown({
    Name = "Weapon",
    List = {"Sword","Combat","Scythe","Fans","Claw"},
    Flag = "KillAuraWeapon",
    Nothing = "Select Method...",
    Callback = function(Chosen)
        Method = Chosen 
    end
})



--// Info \\--
Info:AddLabel("")
Info:AddLabel("")
local infoLabel = Info:AddLabel("")
Info:AddLabel("")
Info:AddLabel("")

--// Living Bosses \\--

BossesTab:AddLabel("")
BossesTab:AddLabel("")
BossesTab:AddLabel("")
BossLabel = BossesTab:AddLabel("")
BossesTab:AddLabel("")
BossesTab:AddLabel("")
BossesTab:AddLabel("")

--// Misc Section \\--

MiscSection:AddToggle({
    Name = "Inf Breathing",
    Flag = "InfBreathing",
    Keybind = false,
    Callback = function (v)
        InfBreathing = v
    end
})

MiscSection:AddToggle({
    Name = "Inf Stamina",
    Flag = "InfStamina",
    Keybind = false,
    Callback = function (v)
        InfStamina = v
    end
})

MiscSection:AddDropdown({
    Name = "God mode Selection",
    Flag = "Gm",
    List = GodModes,
    Callback = function(v)
        getgenv().GodSelected = v
    end
})

MiscSection:AddToggle({
    Name = "enable God Mode",
    Flag = "GN",
    Keybind = "",
    Callback = function (v)
        ENG = v
    end
})

MiscSection:AddToggle({
    Name = "Inf Warn Fan Buff",
    Flag = "WarnFanBug",
    Keybind = false,
    Callback = function (v)
        InfWarFans = v
    end
})

MiscSection:AddToggle({
    Name = "Kamado God Mode [Kamado]",
    Flag = "KamadoGod",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(false)
        end
    end
})

MiscSection:AddToggle({
    Name = "Heart Ablaze [Human]",
    Flag = "HeartAblaze",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(false)
        end
    end
})


MiscSection:AddToggle({
    Name = "Thunder Mode [Human]",
    Flag = "Thunder",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(false)
        end
    end
})


MiscSection:AddToggle({
    Name = "No Sun Dmg",
    Flag = "NS",
    Keybind = false,
    Callback = function (v)
        if game:GetService("Players").LocalPlayer.PlayerScripts.Small_Scripts.Gameplay:FindFirstChild("Sun_Damage") then
            if v == true then
                    game:GetService("Players").LocalPlayer.PlayerScripts.Small_Scripts.Gameplay.Sun_Damage.Disabled = true
                else
                    game:GetService("Players").LocalPlayer.PlayerScripts.Small_Scripts.Gameplay.Sun_Damage.Disabled = false
                end
            end
    end
})

MiscSection:AddToggle({
    Name = "No Fog",
    Flag = "NF",
    Keybind = false,
    Callback = function (v)
        if v == true then
            for index, light in pairs(game:GetService("Lighting"):GetChildren()) do
                if light.Name == "Atmosphere" or string.find(light.Name, "Blur") or string.find(light.Name, "Bloom") then
                    light:Destroy()
                end
            end
            game:GetService("Lighting").FogEnd = 1000000
            elseif v == false then
            print("1")
        end
    end
})

MiscSection:AddToggle({
    Name = "Boss Damage Log Spoof",
    Flag = "BDLS",
    Keybind = false,
    Callback = function (v)
        getgenv().hide_userdmg = v
    end
})

MiscSection:AddToggle({
    Name = "Auto Collect Chest",
    Flag = "CollectAllChest",
    Keybind = false,
    Callback = function (v)
        AutoCollectChest = v
    end
})

--// Actual Code \\--

--// Inf War Fan Bugg \\--
spawn(function()
    while task.wait() do
        if InfWarFans then
            local args = {[1] = true}game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("war_Drums_remote"):FireServer(unpack(args))    
            task.wait(2)
        end
    end
end)


--// Auto Collect Chest \\--

spawn(function()
    while task.wait() do
        if AutoCollectChest then
            for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                if v.Name == "Loot_Chest" then
                    for i,c in pairs(v:FindFirstChild("Drops"):GetChildren()) do
                            v["Add_To_Inventory"]:InvokeServer(c.Name)
                            delay(0.5, function()
                            c:Destroy()
                        end)
                    end
                end
            end
        end
    end
end)

--// Inf Breathing/Stam \\--

spawn(function()
    while task.wait() do
        if InfStamina then
            getrenv()._G.AddStamina("gpthebest", 50)
        end
    end
end)

spawn(function()
    while task.wait() do
        if InfBreathing then
            getrenv()._G.AddBreath("gpthebest", 50)
        end
    end
end)


--// Inf iFrames \\--
spawn(function()
    while task.wait() do
        if ENG then
            local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = getgenv().GodSelected,
                [4] = 1
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            task.wait(0.5)
        end
    end
end)

--// Damage Log Spoofer \\--
spawn(function()
    while task.wait() do
        if getgenv().hide_userdmg == true then
            local user = game:GetService("Players").LocalPlayer.Name
            if game:GetService("Players")[tostring(user)].PlayerGui["Pop_Ups"].Bosshp["Damage_Log"]:FindFirstChild(tostring(user)) then
            game:GetService("Players")[tostring(user)].PlayerGui["Pop_Ups"].Bosshp["Damage_Log"][tostring(user)].txt.Text = "Blackout Blackout Blackout"
            end
        end
    end
end)

--// Auto Med and Auto Split \\--
spawn(function()
    while task.wait() do
        if getgenv().AutoMed then
            pcall(function()
                game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["Meditate_gui"].Holder.LocalScript.Value.Value = 100
            end)
        end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().AutoSplit then
            pcall(function()
                game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["boulder_split_ui"].Holder.LocalScript.Value.Value = 10000
            end)
        end
    end
end)

--// Kill Aura \\-- 
task.spawn(function()
    while task.wait() do
        if getgenv().KillAura then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                    if (not debounce) and ((not game.Players.LocalPlayer:FindFirstChild("combotangasd123")) or game.Players.LocalPlayer:FindFirstChild("combotangasd123") and game.Players.LocalPlayer:FindFirstChild("combotangasd123").Value < 1) then 
                    debounce = true 
                    attack(attackMethods[Method])
                    task.wait(1.25)
                    debounce = false
                end
            end
        end
    end
end)



FarmMethod = "Above"
getgenv().Distance = 10
getgenv().tweenspeed = 300
SelectedBosses = selectedBosses
SelectedMobs = selectedMobs


--// Farm \\--
--// Farm \\--
spawn(function()
    local currentEntity
    local antifallEnabled = false
    local TweenFa
    local farmActive = false

    while wait() do
        if getgenv().Farm and not farmActive then
            farmActive = true
            if not antifallEnabled then
                EnableAntiFall()
                antifallEnabled = true
            end
        elseif not getgenv().Farm and farmActive then
            farmActive = false
            if antifallEnabled then
                DisableAntiFall()
                antifallEnabled = false
            end
        end

        if getgenv().Farm then
            local selectedEntities = {}
            local parentFolder = game:GetService("Workspace").Mobs

            for _, bossName in ipairs(SelectedBosses or {}) do
                table.insert(selectedEntities, bossName)
            end

            for _, mobName in ipairs(SelectedMobs or {}) do
                table.insert(selectedEntities, mobName)
            end

            local v = getclosest(selectedEntities, parentFolder, FarmModes)

            if v then
                if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    if not currentEntity or currentEntity ~= v then
                        currentEntity = v
                        if TweenFa then
                            TweenFa:Cancel()
                        end
                        repeat
                            task.wait()
                            local entityCFrame = v:GetModelCFrame() * FarmModes
                            if GetDistance(entityCFrame) < 25 and GetDistance(entityCFrame) < 150 then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = entityCFrame
                            else
                                TweenFa = Tween(entityCFrame)
                            end
                        until not getgenv().Farm or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)

                        -- Check if the entity is a boss or a regular mob
                        if IsEntitySelected(v, SelectedBosses) then
                            -- Handle boss defeat
                            print("Defeated boss:", v.Name)
                        elseif IsEntitySelected(v, SelectedMobs) then
                            -- Handle regular mob defeat
                            print("Defeated mob:", v.Name)
                        end
                    end
                else
                    currentEntity = nil
                    if TweenFa then
                        TweenFa:Cancel()
                    end
                end
            else
                currentEntity = nil
                if TweenFa then
                    TweenFa:Cancel()
                end
            end
        else
            currentEntity = nil
            if TweenFa then
                TweenFa:Cancel()
            end
        end
    end
end)

function getclosestSkills(parentFolder)
    local closestEntity = nil
    local closestDistance = math.huge
    local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

    local entities = parentFolder:GetDescendants()

    for _, entity in ipairs(entities) do
        if entity:IsA("Model") then
            local humanoid = entity:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local distance = (entity:GetModelCFrame().Position - playerPosition).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEntity = entity
                end
            end
        end
    end

    return closestEntity
end

function getClosestPlayer(selectedPlayerName)
    local closestPlayer = nil
    local closestDistance = math.huge

    local players = game:GetService("Players"):GetPlayers()
    local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

    for _, player in ipairs(players) do
        if player ~= game.Players.LocalPlayer and (not selectedPlayerName or player.Name == selectedPlayerName) then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local distance = (character.HumanoidRootPart.Position - playerPosition).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    if closestPlayer then
        print("Closest Player:", closestPlayer.Name)
    else
        print("No Closest Player Found")
    end

    return closestPlayer
end


function getClosestPlayer1()
    local closestPlayer = nil
    local closestDistance = math.huge

    local players = game:GetService("Players"):GetPlayers()
    local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

    for _, player in ipairs(players) do
        if player ~= game.Players.LocalPlayer then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local distance = (character.HumanoidRootPart.Position - playerPosition).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    if closestPlayer then
        print("Closest Player:", closestPlayer.Name)
    else
        print("No Closest Player Found")
    end

    return closestPlayer
end



--// Arrow Kill Aura \\--


spawn(function()
    while task.wait() do
        if getgenv().Arrow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                local parentFolder = game:GetService("Workspace").Mobs
                local v = getclosestSkills(parentFolder)
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("arrow_knock_back_damage",game.Players.LocalPlayer.Character,v:GetModelCFrame(),v,200,200)
                task.wait(0.13)
            end
        end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().Arrow or getgenv().TargetPlayersArrow or getgenv().AllArrow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("skil_ting_asd",game:GetService("Players").LocalPlayer,"arrow_knock_back",5)
                task.wait(5)
            end
        end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().Snow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                local parentFolder = game:GetService("Workspace").Mobs
                local v = getclosestSkills(parentFolder)
                if v and table.find(AllowedBosses, v.Name) then
                    local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                    local distance = (v:GetModelCFrame().Position - playerPosition).Magnitude
                    if distance <= 50 then
                        for i=1,5 do
                        print("Tried To Kill "..v.Name)
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("snow_breatihng_layers_frost_damage", game.Players.LocalPlayer.Character, v:GetModelCFrame(), 99999, 99999)
                        task.wait(0.2)
                        end
                    else
                        print("Not within range of the mob.")
                    end
                else
                    print("No valid boss entity found.")
                end
                task.wait(2)
            end
        end
    end
end)


spawn(function()
    while task.wait() do
        if getgenv().Snow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("skil_ting_asd",game:GetService("Players").LocalPlayer,"snow_breatihng_layers_frost",5)
                task.wait(14)
            end
        end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().TargetPlayersArrow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                local players = game:GetService("Players"):GetPlayers()
                local selectedPlayerName = getgenv().selectedPlayerName

                local closestPlayer = getClosestPlayer(selectedPlayerName)

                for _, player in ipairs(players) do
                    if player ~= game.Players.LocalPlayer and (closestPlayer == nil or player == closestPlayer) then
                        local character = player.Character
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            if selectedPlayerName and player.Name == selectedPlayerName then
                                local targetCFrame = character.HumanoidRootPart.CFrame
                                for i = 1, 5 do
                                    print("Tried To Kill "..player.Name)
                                    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("arrow_knock_back_damage", game.Players.LocalPlayer.Character, targetCFrame, character, 99999, 99999)
                                    task.wait(0.2)
                                end
                                task.wait(1)
                            end
                        end
                    end
                end
            end
        end
    end
end)


spawn(function()
    while task.wait() do
        if getgenv().AllArrow then
            if plr.Character:FindFirstChild("HumanoidRootPart") then
                local v = getClosestPlayer1()
                print("Tried To Kill "..v.Name)
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("arrow_knock_back_damage",game.Players.LocalPlayer.Character,v.Character:GetModelCFrame(),v.Character,99999,99999)
                task.wait(0.2)
            end
        end
    end
end)




--// No Clip \\--
local antifallActive = false 
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().Farm then
            for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false    
                end
                if v:IsA("Humanoid") then
                    v:ChangeState(11)
                end
            end
            if not antifallActive then  -- Check if no clip is already active
                antifallActive = true
                EnableAntiFall()
            end
        else
            if antifallActive then  -- Check if no clip is active
                antifallActive = false
                DisableAntiFall()
            end
        end
    end)
end)

--// Farm Method \\--
spawn(function()
    while wait() do
        SkillActive = AutoUseSkills and (getgenv().Farm and NearestMobs)
         if FarmMethod == "Above" then
                FarmModes = CFrame.new(0,getgenv().Distance,0) * CFrame.Angles(math.rad(-90),0,0)
            elseif FarmMethod == "Below" then
                FarmModes = CFrame.new(0,-getgenv().Distance,0) * CFrame.Angles(math.rad(90),0,0)
            elseif FarmMethod == "Behind" then
                FarmModes = CFrame.new(0,0,getgenv().Distance)
            end
    end
end)



--// Player Stats \\--
local function updateLabels()
    local playerData = game:GetService("ReplicatedStorage").Player_Data[plr.Name]
    if playerData then
        local statText = ""
        statText = statText .. "Clan: " .. tostring(playerData.Clan.Value) .. "\n"
        statText = statText .. "Race: " .. raceTable[playerData.Race.Value] .. "\n"
        statText = statText .. "Demon Art Spins: " .. tostring(playerData.Demon_art_Spins.Value) .. "\n"
        statText = statText .. "Clan Spins: " .. tostring(playerData.Spins.Value) .. "\n"
        statText = statText .. "Yen: " .. tostring(playerData.Yen.Value) .. "\n"
        local demonProgressText = string.format("Demon Progress: %d/%d", playerData.DemonProgress[1].Value, playerData.DemonProgress[2].Value)
        statText = statText .. demonProgressText .. "\n"
        local breathingProgressText = string.format("Breathing Progress: %d/%d", playerData.BreathingProgress[1].Value, playerData.BreathingProgress[2].Value)
        statText = statText .. breathingProgressText

        infoLabel:Set(statText)
    end
end

--// Add Mobs To Dropdown \\--
local function checkAndAddBosses()
    for _, child in ipairs(game:GetService("Workspace").Mobs.Bosses:GetDescendants()) do
        if child:IsA("Model") then
            local mobName = child.Name
            if table.find(AllowedBosses, mobName) and not table.find(Bosses, mobName) then
                table.insert(Bosses, mobName)
                BossDropdown:Set(mobName)
            end
        end
    end
end

local function checkAndAddMobs()
    for _, child in ipairs(game:GetService("Workspace").Mobs:GetDescendants()) do
        if child:IsA("Model") then
            local mobName = child.Name
            if table.find(AllowedMobs, mobName) and not table.find(mobs, mobName) then
                table.insert(mobs, mobName)
                MobDropdown:Set(mobName)
            end
        end
    end
end




local function updateBossLabels()
    BossLabelTable = {}

    for _, child in ipairs(game:GetService("Workspace").Mobs.Bosses:GetDescendants()) do
        if child:IsA("Model") then
            local mobName = child.Name
            if string.find(child:GetFullName(), "Bosses") then
                if table.find(AllowedBosses, mobName) then
                    table.insert(BossLabelTable, mobName)
                end
            end
        end
    end

    BossLabel:Set("Bosses Spawned: \n" .. table.concat(BossLabelTable, "\n"))
end





--// Update Labels / Dropdowns \\--
spawn(function()
    while task.wait(0.5) do
        updateBossLabels()
        checkAndAddBosses()
        checkAndAddMobs()
        updateLabels()
    end
end)
